name: Deploy

on:
  push:
    tags: ['v*']
  workflow_dispatch:
    inputs:
      pre-release-suffix:
        description: 'Version suffix for pre-releases ("a", "b", "rc", etc.)'
        required: false
        default: 'dev'
      pre-release-version:
        description: 'Version number for pre-releases; defaults to build number'
        required: false
        default: ''
env:
  LATEST_PY_VERSION: '3.11'

jobs:
  # Deploy stable builds on tags only, and pre-release builds from manual trigger ("workflow_dispatch")
  release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.LATEST_PY_VERSION }}
      - uses: snok/install-poetry@v1.3
        with:
          virtualenvs-in-project: true

      - name: Set pre-release version
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        env:
          pre-release-suffix: ${{ github.event.inputs.pre-release-suffix || 'dev' }}
          pre-release-version: ${{ github.event.inputs.pre-release-version || github.run_number }}
        run: |
          poetry version $(poetry version -s).${{ env.pre-release-suffix }}${{ env.pre-release-version }}
          poetry version

      - name: Build package distributions
        run: poetry build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      # Notify Docker image repo that there's a new release available
      #- name: Repository Dispatch
      #  if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      #  uses: peter-evans/repository-dispatch@v1
      #  with:
      #    token: ${{ secrets.DOCKERHUB_TRIGGER_TOKEN }}
      #    repository: JWCook/pyinaturalist-notebook
      #    event-type: post-release
      #    client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
